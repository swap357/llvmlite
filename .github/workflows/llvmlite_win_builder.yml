name: llvmlite_win_builder

on:
  workflow_dispatch:
    inputs:
      llvmdev_run_id:
        description: 'llvmdev workflow run id to use artifacts from'
        type: string

jobs:
  windows:
    name: Windows
    runs-on: windows-2019
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false

    steps:
        - uses: actions/checkout@v4
      
        - name: Download LLVMDEV Artifact
          if: ${{ inputs.llvmdev_run_id != '' }}
          uses: actions/download-artifact@v4
          with:   
            name: llvmdev-windows-x86_64
            path: llvmdev-pkg
            run-id: ${{ inputs.llvmdev_run_id }}
            repository: ${{ github.repository }}
            github-token: ${{ secrets.GITHUB_TOKEN }}

        - name: Install Visual Studio
          uses: microsoft/setup-msbuild@v1.1

        - name: Install Miniconda
          shell: pwsh
          run: |
            $wc = New-Object net.webclient
            $wc.Downloadfile("https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe", "Miniconda3-latest-Windows-x86_64.exe")
            Start-Process "Miniconda3-latest-Windows-x86_64.exe" "/S /D=C:\Miniconda3" -Wait

        - name: Create Build Environment
          shell: bash
          run: |
            source /c/Miniconda3/Scripts/activate
            conda create -n build_env \
              python=${{ matrix.python-version }} \
              setuptools \
              wheel \
              cmake \
              libxml2 \
              -y
            conda activate build_env
            if [ "${{ inputs.llvmdev_run_id }}" != "" ]; then
              # Install local llvmdev package if workflow ID provided
              conda install -y ./llvmdev-pkg/*.tar.bz2
            else
              # Install from numba channel if no workflow ID
              conda install -y -c numba/label/ci llvmdev
            fi

        - name: Set Environment Variables
          shell: bash
          run: |
            echo "CMAKE_GENERATOR=Visual Studio 16 2019" >> $GITHUB_ENV
            echo "CMAKE_GENERATOR_PLATFORM=x64" >> $GITHUB_ENV
            echo "LLVM_CONFIG=C:/Miniconda3/envs/build_env/Library/bin/llvm-config" >> $GITHUB_ENV
            echo "LLVM_DIR=C:/Miniconda3/envs/build_env/Library/lib/cmake/llvm" >> $GITHUB_ENV
            echo "LLVM_SHARED=1" >> $GITHUB_ENV
            echo "LIBXML2_ROOT=C:/Miniconda3/envs/build_env/Library" >> $GITHUB_ENV
        
        - name: build_win_64_py${{ matrix.python-version }}_npy1.11
          shell: cmd
          run: |
            call C:\Miniconda3\Scripts\activate.bat build_env
            set DISTUTILS_USE_SDK=1
            set VS_VERSION=2019
            set VS_PLATFORM=x64
            python setup.py clean
            python setup.py bdist_wheel
        
        - name: upload_win_64_py${{ matrix.python-version }}
          uses: actions/upload-artifact@v4
          with:
            name: llvmlite-win-64-py${{ matrix.python-version }}
            path: dist/*.whl
            retention-days: 7
            if-no-files-found: error