name: llvmlite_linux-64_conda_builder

on:
  pull_request:
    paths:
      - .github/workflows/llvmlite_linux-64_conda_builder.yml
      - buildscripts/github/llvmlite_evaluate.py
  label:
    types: [created]
  workflow_dispatch:
    inputs:
      llvmdev_run_id:
        description: 'llvmdev workflow run ID (optional)'
        required: false
        type: string

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.evaluate.outputs.should_run }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.13'
      - name: Evaluate
        id: evaluate
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_LABEL_NAME: ${{ github.event.label.name }}
        run: |
          ./buildscripts/github/llvmlite_evaluate.py

  linux-64-build:
    needs: check
    if: needs.check.outputs.should_run == 'true'
    name: linux-64-build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""

      - name: Install conda-build
        run: conda install conda-build

      - name: Download llvmdev Artifact
        if: ${{ inputs.llvmdev_run_id != '' }}
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: llvmdev_linux-64
          path: llvmdev_conda_packages
          run-id: ${{ inputs.llvmdev_run_id }}
          repository: ${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build llvmlite conda package
        run: |
          if [ "${{ inputs.llvmdev_run_id }}" != "" ]; then
              LLVMDEV_CHANNEL="file://$PWD/llvmdev_conda_packages"
          else
              LLVMDEV_CHANNEL="numba"
          fi
          CONDA_CHANNEL_DIR="conda_channel_dir"
          mkdir $CONDA_CHANNEL_DIR
          conda build --debug -c "$LLVMDEV_CHANNEL" -c defaults --python=${{ matrix.python-version }} conda-recipes/llvmlite --output-folder=$CONDA_CHANNEL_DIR --no-test

      - name: Upload llvmlite conda package
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: llvmlite-linux-64-py${{ matrix.python-version }}
          path: conda_channel_dir
          compression-level: 0
          retention-days: 7
          if-no-files-found: error

  linux-64-test:
    name: linux-64-test
    needs: linux-64-build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false

    steps:
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1

      - name: Download llvmlite artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: llvmlite-linux-64-py${{ matrix.python-version }}

      - name: Install conda-build and llvmlite
        run: |
          conda install conda-build

      - name: Run tests
        run: conda build --test linux-64/llvmlite*.conda
